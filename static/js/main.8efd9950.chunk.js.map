{"version":3,"sources":["components/headerComponent.js","components/recipeComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","AppName","Header","SearchBox","SearchIcon","img","RecipeImage","Placeholder","SearchInput","input","RecipeListContainer","RecipeContainer","CoverImage","RecipeName","span","SeeMoreText","IngredientsText","SeeNewTab","RecipeComponent","props","useState","show","setShow","recipe","label","image","ingredients","url","Dialog","onClose","console","log","open","DialogTitle","DialogContent","map","ingredient","index","className","text","weight","DialogActions","onClick","window","src","alt","AppComponent","searchQuery","updateSearchQuery","recipeList","updateRecipeList","timeoutId","updateTimeoutId","fetchData","searchString","a","Axios","get","response","data","hits","placeholder","value","onChange","e","clearTimeout","target","timeout","setTimeout","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.8efd9950.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst AppName = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n`;\r\nconst Header = styled.div`\r\n  background-color: black;\r\n  color: white;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 20px;\r\n  font-size: 25px;\r\n  font-weight: bold;\r\n`;\r\nconst SearchBox = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 10px 10px;\r\n  border-radius: 6px;\r\n  margin-left: 20px;\r\n  width: 50%;\r\n  background-color: white;\r\n`;\r\nconst SearchIcon = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n`;\r\nconst RecipeImage = styled.img`\r\n  width: 36px;\r\n  height: 36px;\r\n  margin: 15px;\r\n`;\r\nconst Placeholder = styled.img`\r\n  width: 120px;\r\n  height: 120px;\r\n  margin: 200px;\r\n  opacity: 50%;\r\n`;\r\nconst SearchInput = styled.input`\r\n  color: black;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  border: none;\r\n  outline: none;\r\n  margin-left: 15px;\r\n`;\r\nconst RecipeListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  padding: 30px;\r\n  gap: 20px;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\n// eslint-disable-next-line\r\nexport default{\r\n  Container,\r\n  AppName,\r\n  Header,\r\n  SearchBox,\r\n  SearchIcon,\r\n  SearchInput,\r\n  RecipeImage,\r\n  Placeholder,\r\n  RecipeListContainer,\r\n}","import styled from 'styled-components'\r\n\r\nconst RecipeContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px;\r\n  width: 300px;\r\n`;\r\nconst CoverImage = styled.img`\r\n  object-fit: cover;\r\n  height: 200px;\r\n`;\r\nconst RecipeName = styled.span`\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n  color: black;\r\n  margin: 10px 0;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n`;\r\nconst SeeMoreText = styled.span`\r\n  color: #eb3300;\r\n  font-size: 18px;\r\n  text-align: center;\r\n  border: solid 1px #eb3300;\r\n  border-radius: 3px;\r\n  padding: 10px 15px;\r\n  cursor: pointer;\r\n`;\r\nconst IngredientsText = styled(SeeMoreText)`\r\n  color: green;\r\n  border: solid 1px green;\r\n  margin-top: 12px;\r\n  margin-bottom: 12px;\r\n`;\r\nconst SeeNewTab = styled(SeeMoreText)`\r\n  color: green;\r\n  border: solid 1px green;\r\n`;\r\n\r\n// eslint-disable-next-line\r\nexport default{\r\n  RecipeContainer,\r\n  CoverImage,\r\n  RecipeName,\r\n  SeeMoreText,\r\n  IngredientsText,\r\n  SeeNewTab,\r\n}\r\n","import React, { useState } from \"react\";\nimport Axios from \"axios\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\nimport Header from './components/headerComponent';\nimport Recipe from './components/recipeComponent';\n\nconst APP_ID = \"a52b4d43\";\nconst APP_KEY = \"e0e5c667605f5e91d8275c973531b80a\";\n\nconst RecipeComponent = (props) => {\n  const [show, setShow] = useState(\"\");\n\n  const { label, image, ingredients, url } = props.recipe;\n  return (\n    <Recipe.RecipeContainer>\n      <Dialog\n        onClose={() => console.log(\"Container Closed\")}\n        aria-labelledby=\"simple-dialog-title\"\n        open={!!show}\n      >\n        <DialogTitle>Ingredients</DialogTitle>\n        <DialogContent>\n          <Recipe.RecipeName>{label}</Recipe.RecipeName>\n          <table>\n            <thead>\n              <th>Ingredient</th>\n              <th>Weight</th>\n            </thead>\n            <tbody>\n              {ingredients.map((ingredient, index) => (\n                <tr key={index} className=\"ingredient-list\">\n                  <td>{ingredient.text}</td>\n                  <td>{ingredient.weight}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </DialogContent>\n        <DialogActions>\n          <Recipe.SeeNewTab onClick={() => window.open(url)}>See More</Recipe.SeeNewTab>\n          <Recipe.SeeMoreText onClick={() => setShow(\"\")}>Close</Recipe.SeeMoreText>\n        </DialogActions>\n      </Dialog>\n      <Recipe.RecipeName>{label}</Recipe.RecipeName>\n      <Recipe.CoverImage src={image} alt={label} />\n      <Recipe.IngredientsText onClick={() => setShow(!show)}>\n        Ingredients List\n      </Recipe.IngredientsText>\n      <Recipe.SeeMoreText onClick={() => window.open(url)}>\n        Full Recipe\n      </Recipe.SeeMoreText>\n    </Recipe.RecipeContainer>\n  );\n};\n\nconst AppComponent = () => {\n  const [searchQuery, updateSearchQuery] = useState(\"\");\n  const [recipeList, updateRecipeList] = useState([]);\n  const [timeoutId, updateTimeoutId] = useState();\n  const fetchData = async (searchString) => {\n    const response = await Axios.get(\n      `https://api.edamam.com/search?q=${searchString}&app_id=${APP_ID}&app_key=${APP_KEY}`,\n    );\n    updateRecipeList(response.data.hits);\n  };\n\n  const onTextChange = (e) => {\n    clearTimeout(timeoutId);\n    updateSearchQuery(e.target.value);\n    const timeout = setTimeout(() => fetchData(e.target.value), 500);\n    updateTimeoutId(timeout);\n  };\n\n  return (\n    <Header.Container>\n      <Header.Header>\n        <Header.AppName>\n        <Header.RecipeImage src=\"/images/Book.svg\"/>\n          Recipe App\n        </Header.AppName>\n        <Header.SearchBox>\n          <Header.SearchIcon src='/images/Search.svg'/>\n          <Header.SearchInput\n            placeholder=\"Search Recipe\"\n            value={searchQuery}\n            onChange={onTextChange}\n          />\n        </Header.SearchBox>\n      </Header.Header>\n      <Header.RecipeListContainer>\n        {recipeList?.length ? (\n          recipeList.map((recipe, index) => (\n            <RecipeComponent key={index} recipe={recipe.recipe} />\n          ))\n        ) : (\n          <Header.Placeholder src=\"/images/Book.svg\"/>\n        )}\n      </Header.RecipeListContainer>\n    </Header.Container>\n  );\n};\n\nexport default AppComponent;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}